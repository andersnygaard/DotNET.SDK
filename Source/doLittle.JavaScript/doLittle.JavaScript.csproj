<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard1.4</TargetFramework>
  </PropertyGroup>

  <!-- Custom task to bundle together files -->
  <UsingTask TaskName="Bundle" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" Condition=" '$(OS)' == 'Windows_NT' ">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Linq" />
      <Code Type="Fragment" Language="cs"><![CDATA[
            var keyword = "@depends";
            var directory = Path.GetDirectoryName(InputFilename);
            Func<string, string> maybeAddNewline = s => s.EndsWith(Environment.NewLine) ? s : s + Environment.NewLine;
            File.WriteAllText(
                OutputFilename,
                string.Join("",
                    File.ReadAllLines(InputFilename)
                        .Where(l => l.StartsWith(keyword))
                        .Select(l => l.Substring(keyword.Length).Trim())
                        .Select(l => Path.Combine(directory, l))
                        .Select(File.ReadAllText)
                        .Select(maybeAddNewline)));
          ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="CreatedoLittleDebug" Inputs="@(Content)" Outputs="doLittle.debug.js" BeforeTargets="Build" Condition=" '$(OS)' == 'Windows_NT' ">
    <Bundle InputFilename="$(ProjectDir)doLittle.js" OutputFilename="$(ProjectDir)doLittle.debug.js" />
  </Target>
  

</Project>
